{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,SAAU,iBAGZ,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBA8BjC,SAASI,EAAcR,EAAUK,GAC/B,MAAMI,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEb,E,MAAUK,IAEpBS,EAAO,C,SAAEd,E,MAAUK,GAAQ,GAE5BA,EAAM,G,CApCbJ,EAAKC,KAAKc,iBAAiB,UAAUC,IACnCA,EAAIC,iBAEJ,IAAIC,EAAalB,EAAKI,MAAMe,MACxBC,EAAYpB,EAAKK,KAAKc,MACtBE,EAAcrB,EAAKM,OAAOa,MAE1BG,EAAc,EACdC,EAAaC,OAAON,GAAcM,OAAOJ,GAE7C,IAAKK,EAAI,EAAGA,EAAID,OAAOH,GAAcI,GAAK,EACxCH,GAAe,EACfC,GAAcC,OAAOJ,GACrBb,EAAce,EAAaC,GACxBG,MAAK,EAAC3B,SAAEA,EAAQK,MAAEA,MACjBR,EAAAF,GAASG,OAAO8B,QACd,uBAAqB5B,QAAiBK,MAAU,IAGnDwB,OAAM,EAAC7B,SAAEA,EAAQK,MAAEA,MAClBR,EAAAF,GAASG,OAAOgC,QACd,sBAAoB9B,QAAeK,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  position: 'right-bottom',\n});\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  let delayValue = refs.delay.value;\n  let stepValue = refs.step.value;\n  let amountValue = refs.amount.value;\n\n  let positionNum = 0;\n  let stepNumber = Number(delayValue) - Number(stepValue);\n\n  for (i = 0; i < Number(amountValue); i += 1) {\n    positionNum += 1;\n    stepNumber += Number(stepValue);\n    createPromise(positionNum, stepNumber)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","position","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delayValue","value","stepValue","amountValue","positionNum","stepNumber","Number","i","then","success","catch","failure"],"version":3,"file":"03-promises.464208f0.js.map"}